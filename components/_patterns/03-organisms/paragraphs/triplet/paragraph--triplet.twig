{#
/**
 * @file
 * Default theme implementation to display a paragraph.
 *
 * Available variables:
 * - paragraph: Full paragraph entity.
 *   - id: The paragraph ID.
 *   - bundle: The type of the paragraph, for example, "image" or "text".
 *   - authorid: The user ID of the paragraph author.
 *   - createdtime: Formatted creation date. Preprocess functions can
 *     reformat it by calling format_date() with the desired parameters on
 *     $variables['paragraph']->getCreatedTime().
 * - content: All paragraph items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - paragraphs: The current template type (also known as a "theming hook").
 *   - paragraphs--type-[type]: The current paragraphs type. For example, if the paragraph is an
 *     "Image" it would result in "paragraphs--type--image". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - paragraphs--view-mode--[view_mode]: The View Mode of the paragraph; for example, a
 *     preview would result in: "paragraphs--view-mode--preview", and
 *     default: "paragraphs--view-mode--default".
 * - view_mode: View mode; for example, "preview" or "full".
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_paragraph()
 *
 * @ingroup themeable
 */
#}
{% set bundle = paragraph.bundle ?: base_class %}

{%
  set classes = [
    "paragraph"|clean_class,
    "paragraph--" ~ bundle|clean_class,
  ]
%}
{% if content %}
  {% set first = [content.field_heading_first, content.field_first_body_text, content.field_first_media_item, content.field_first_cta_button] %}
  {% set second = [content.field_heading_second, content.field_second_body_text, content.field_second_media_item, content.field_second_cta_button] %}
  {% set third = [content.field_heading_third, content.field_third_body_text, content.field_third_media_item, content_third_cta_button] %}
{% else %}
  {% set first = dummy_heading %}
  {% set second = dummy_text %}
  {% set third = dummy_media %}
{% endif %}

{% if attributes %}
  <div{{ attributes.addClass(classes) }}>
{% else %}
  <div class="{% for class in classes %}{{ class ~ " " }}{% endfor %}">
{% endif %}

<div class="paragraph--{{ bundle }}__inner">
{% set attributes = attributes.removeClass(classes) %}
{% embed "@base/layouts/grid/00-grid.twig" with {
        items: [first, second, third],
        grid_base_class: "grid",
        grid_modifiers: ["columns-3"]
  } %}
  {% block grid_content %}
    {% for item in items %}
      <div class="grid__item">
        {% include "@atoms/02-text/00-headings/_heading.twig" with {
          heading: item[0],
          heading_level: 3,
          heading_base_class: "paragraph--triplet__heading"
        } %}
        {% include "@atoms/02-text/text/01-paragraph.twig" with {
          paragraph_content: item[1]
        } %}

        {{ item[2] }}


        {% include "@atoms/01-links/link/link.twig" with {
            link_base_class: "paragraph--triplet__cta",
            link_url: "https://www.google.com",
            link_content: "Link"
        } %}
      </div>
    {% endfor %}
  {% endblock %}

{% endembed %}
</div>
</div>
